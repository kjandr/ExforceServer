<!DOCTYPE html>
<html lang="de">

<!-- ðŸŽ¨ Dark Style -->
<link rel="stylesheet" href="/css/styles.css">

<%- include(partials + '/head', { title: "Motor hinzufÃ¼gen" }) %>

<body class="dark-mode">
<%- include(partials + '/nav') %>

<div class="container py-4">
    <form method="POST" action="/admin/engine/add" class="edit-form">
        <label for="type">Motor Typ auswÃ¤hlen:</label>
        <select id="type" name="type" onchange="applyMotorType()">
            <option value="none" selected>Kein Motor Type</option>
            <% engines.forEach(e => { %>
                <option value="<%= e.type %>"><%= e.type %></option>
            <% }) %>
        </select>

        <label for="serial_no">Seriennummer:</label>
        <input type="text" id="serial_no" name="serial_no" required>

        <label for="remark">Bemerkung:</label>
        <input type="text" id="remark" name="remark">

        <label for="controller_id">Controller ID:</label>
        <input type="number" id="controller_id" name="controller_id" required>

        <label for="current_ki">Current Ki:</label>
        <input type="number" step="0.01" id="current_ki" name="current_ki" required>

        <label for="current_kp">Current Kp:</label>
        <input type="number" step="0.01" id="current_kp" name="current_kp" required>

        <label for="freq_foc_khz">FOC Frequenz (kHz):</label>
        <input type="number" step="0.01" id="freq_foc_khz" name="freq_foc_khz" required>

        <label for="flux_linkage_mwb">Flux Linkage (mWb):</label>
        <input type="number" step="0.01" id="flux_linkage_mwb" name="flux_linkage_mwb" required>

        <label for="inductance_uh">InduktivitÃ¤t (ÂµH):</label>
        <input type="number" step="0.01" id="inductance_uh" name="inductance_uh" required>

        <label for="resistance_mr">Widerstand (mÎ©):</label>
        <input type="number" step="0.01" id="resistance_mr" name="resistance_mr" required>

        <label for="observer_gain">Observer Gain:</label>
        <input type="number" step="0.01" id="observer_gain" name="observer_gain" required>

        <label for="current_max">Maximaler Strom:</label>
        <input type="number" step="0.1" id="current_max" name="current_max" required>

        <label for="erpm_max">Maximale ERPM:</label>
        <input type="number" id="erpm_max" name="erpm_max" required>

        <label for="wattage_max">Maximale Leistung (W):</label>
        <input type="number" id="wattage_max" name="wattage_max" required>

        <label for="temp_type">Temperatur Typ:</label>
        <input type="text" id="temp_type" name="temp_type" required>

        <label for="temp_cutoff_start">Temperatur Cutoff Start:</label>
        <input type="number" step="0.1" id="temp_cutoff_start" name="temp_cutoff_start" required>

        <label for="temp_cutoff_end">Temperatur Cutoff Ende:</label>
        <input type="number" step="0.1" id="temp_cutoff_end" name="temp_cutoff_end" required>

        <label for="mileage_km">Kilometerstand (km):</label>
        <input type="number" step="0.1" id="mileage_km" name="mileage_km" required>

        <label for="operating_time">Operating Time:</label>
        <input type="number" id="operating_time" name="operating_time" required>

        <div class="form-actions">
            <button type="submit" class="btn-success">ðŸ’¾ Speichern</button>
            <a href="/admin/engine/list"><button type="button" class="btn-danger">Abbrechen</button></a>
        </div>
    </form>
</div>

<%- include(partials + '/footer') %>
</body>

<script>
    const engines = {
        "none": {
            serial_no: "",
            remark: "",
            controller_id: -1,
            type: "",
            current_ki: 0.0,
            current_kp: 0.0,
            freq_foc_khz: 0.0,
            flux_linkage_mwb: 0.0,
            inductance_uh: 0.0,
            resistance_mr: 0.0,
            observer_gain: 0.0,
            current_max: 0.0,
            erpm_max: 0,
            wattage_max: 0,
            temp_type: "",
            temp_cutoff_end: 0.0,
            temp_cutoff_start: 0.0,
            mileage_km: 0,
            operating_time: 0
        },
        <% engines.forEach(d => {
            const p = d.preset || {}; %>
        "<%= d.type %>": {
            serial_no: "<%= p.serial_no || '' %>",
            remark: "",
            controller_id: -1,
            type: "<%= d.type %>",
            current_ki: "<%= p.current_ki || 0.0 %>",
            current_kp: <%= p.current_kp ?? 0.0 %>,
            freq_foc_khz: <%= p.freq_foc_khz ?? 0.0 %>,
            flux_linkage_mwb: <%= p.flux_linkage_mwb ?? 0.0 %>,
            inductance_uh: <%= p.inductance_uh ?? 0.0 %>,
            resistance_mr: <%= p.resistance_mr ?? 0.0 %>,
            observer_gain: <%= p.observer_gain ?? 0.0 %>,
            current_max: <%= p.current_max ?? 0.0 %>,
            erpm_max: <%= p.erpm_max ?? 0 %>,
            wattage_max: <%= p.wattage_max ?? 0 %>,
            temp_type: "<%= p.temp_type || '' %>",
            temp_cutoff_end: <%= p.temp_cutoff_end ?? 0.0 %>,
            temp_cutoff_start: <%= p.temp_cutoff_start ?? 0.0 %>,
            mileage_km: <%= p.mileage_km ?? 0 %>,
            operating_time: <%= p.operating_time ?? 0 %>
        },
        <% }) %>
    };

    function applyMotorType() {
        const selected = document.getElementById("type").value;
        const values = engines[selected];
        if (!values) return;

        Object.entries(values).forEach(([key, val]) => {
            const input = document.getElementById(key);
            if (input) {
                input.value = val;
            }
        });
    }
</script>
